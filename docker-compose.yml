version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=30d"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
    restart: unless-stopped
    networks:
      - monitoring
    ports:
      - "9090:9090"
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: "0.5"
    user: "1000:1000"
    security_opt:
      - no-new-privileges:true  # Impede a escalada de privilégios
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -S http://localhost:9090 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}  # Senha definida via variável de ambiente
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini:ro  # Arquivo de configuração com permissões somente leitura
      - ./provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "0.25"
    user: "1001:1001"
    security_opt:
      - no-new-privileges:true  # Impede a escalada de privilégios
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -S http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
